/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.5.1/userguide/tutorial_java_projects.html
 */


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE")
    }
}
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
    baseName = 'Auction_Back'
    version = '1.3.0'
}


//plugins {
//    // Apply the java plugin to add support for Java
//    id 'java'
//
//    // Apply the application plugin to add support for building a CLI application
//    id 'application'
//}

repositories {
    mavenCentral()
}


apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compile 'org.springframework.boot:spring-boot-starter-data-rest'

    compile("org.springframework.boot:spring-boot-starter-websocket")



    //client
    compile("org.webjars:webjars-locator-core")
    compile("org.webjars:sockjs-client:1.0.2")
    compile("org.webjars:stomp-websocket:2.3.3")
    compile("org.webjars:bootstrap:3.3.7")
    compile("org.webjars:jquery:3.1.0")
    
    
    
    compile 'io.jsonwebtoken:jjwt:0.9.1'


    compile('org.flywaydb:flyway-core')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile('mysql:mysql-connector-java')
    testCompile('org.springframework.boot:spring-boot-starter-test')

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'


    // JPA Data (We are going to use Repositories, Entities, Hibernate)
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Use MySQL Connector-J
    compile 'mysql:mysql-connector-java'


    compile 'org.springframework.boot:spring-boot-starter-hateoas'


    // This dependency is used by the application.
    implementation 'com.google.guava:guava:27.1-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'


    // JPA Data (We are going to use Repositories, Entities, Hibernate)
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.mariadb.jdbc:mariadb-java-client:2.1.2'
    // https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
//    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.4.3'

    // Use MySQL Connector-J
    compile 'mysql:mysql-connector-java'
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    

    // https://mvnrepository.com/artifact/junit/junit
    testCompile group: 'junit', name: 'junit', version: '4.12'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.1.6.RELEASE'
    testCompile("org.springframework.security:spring-security-test")

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-mail
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '2.1.3.RELEASE'

    // https://mvnrepository.com/artifact/javax.ws.rs/jsr311-api
    compile group: 'javax.ws.rs', name: 'jsr311-api', version: '1.1.1'


    compile 'org.springframework.boot:spring-boot-starter-tomcat'

    // https://mvnrepository.com/artifact/com.h2database/h2
    testCompile group: 'com.h2database', name: 'h2', version: '1.4.199'


//    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    providedCompile 'javax.servlet:servlet-api:2.5'
    providedCompile 'org.apache.tomcat:tomcat-jsp-api:8.5.43'
    
    // https://mvnrepository.com/artifact/org.quartz-scheduler/quartz
    compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.0'

    // https://mvnrepository.com/artifact/org.springframework/spring-test
    testCompile group: 'org.springframework', name: 'spring-test', version: '5.1.4.RELEASE'

    // https://mvnrepository.com/artifact/org.springframework.data/spring-data-jpa
    compile group: 'org.springframework.data', name: 'spring-data-jpa', version: '2.1.10.RELEASE'

    // https://mvnrepository.com/artifact/org.hibernate/hibernate-entitymanager
    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.4.2.Final'

    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-stream-rabbit
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-stream-rabbit', version: '2.1.3.RELEASE'

    compile ("org.subethamail:subethasmtp:3.1.7")

    // https://mvnrepository.com/artifact/org.springframework.integration/spring-integration-mail
    compile group: 'org.springframework.integration', name: 'spring-integration-mail', version: '5.0.3.RELEASE'

    // https://mvnrepository.com/artifact/org.springframework.integration/spring-integration-event
    compile group: 'org.springframework.integration', name: 'spring-integration-event', version: '5.0.5.RELEASE'

    // https://mvnrepository.com/artifact/org.springframework.integration/spring-integration-core
    compile group: 'org.springframework.integration', name: 'spring-integration-core', version: '5.1.3.RELEASE'




}

jar {
    manifest {
        attributes "Main-Class": "com.rahnemacollege.App"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

configurations {
    provided.all*.exclude group: 'javax.servlet'
}


